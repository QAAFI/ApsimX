name: unittest

on:
  push:
    branches:
      - wgp
      - master
  pull_request:

jobs:
  unittest:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore ./ApsimX.sln
    
    - name: Build
      run: dotnet build ./ApsimX.sln -c Release --no-restore
    
    - name: Test
      run: dotnet test ./ApsimX.sln -c Release --no-build --verbosity normal --filter "Category!=LongRunning"

  publish:
    needs: unittest
    runs-on: ubuntu-latest
    env:
      GHUB_APPNAME: qaafi/apsimx
      GHUB_USERNAME: ghub
      GHUB_REGISTRY: dhub.cgmwgp.com
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.GHUB_USERNAME }}
          registry: ${{ env.GHUB_REGISTRY }}
          password: ${{ secrets.DHUB_LOGIN }}

      - name: Create commit branch env
        run: |
          commit_hash=$(git rev-parse --short "${{ github.event.pull_request.head.sha }}")
          echo $commit_hash
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
      
      - name: Build and push to registry
        uses: docker/build-push-action@v3
        with:
          context: "."
          push: true
          tags: ${{ env.GHUB_REGISTRY }}/${{ env.GHUB_APPNAME }}:${{ env.COMMIT_HASH }} , ${{ env.GHUB_REGISTRY }}/${{ env.GHUB_APPNAME }}:latest

      - name: Inspect commit hash
        run: |
          docker buildx imagetools inspect ${{ env.GHUB_REGISTRY }}/${{ env.GHUB_APPNAME }}:${{ env.COMMIT_HASH }}

      - name: Inspect latest
        run: |
          docker buildx imagetools inspect ${{ env.GHUB_REGISTRY }}/${{ env.GHUB_APPNAME }}:latest
      